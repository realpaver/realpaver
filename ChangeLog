# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleases]

## [1.1.1] - 2025-05-20

* Minor update of documentation [4115f9585588b20b539bb699c75fb47f30474079, 5237dad2daa912528372a623e39a0f040664311b]
* Minor API modifications [8e0e58a9e39be3c19fea242a8950a13406f1e903, c710bcabb5b1dbf7a0612c81df3098e4076b9e87, 4ae4ea2d7737e43030dd3fb34fc378066ded21f4]
* Fix a bug in affine forms [7a09b33636a5fac36c0bd57fa0fd048f72eced1a]

## [1.1.0] - 2025-04-25

* Add Taylor linearization
* Add Affine linearization
* Add Polytope hull contractor using linearizations
* Add Piecewise constraints
* Add Fixed-point contractor
* Add Interface to report solutions
# Reorganize definition of RealPaver parameters
* Add SEARCH_STATUS parameter
* Update of documentation

## [1.0.1] - 2025-01-15

* Add an API to improve the reporting of solutions and handle aliases ([issue #21](https://gitlab.univ-nantes.fr/realpavergroup/realpaver/-/issues/21))
* Remove of useless files (README,NEWS,TODO)
* Change default value for assertion option to false
* Update of README.md to add a link to documentation

## [1.0.0] - 2024-12-04

First release, with following features:

* CSP problem definition in C++ or using the RealPaver DSL:
    - Continuous (interval domain) or discrete variables (integer domain or ennuerated set of values)
    - Arithmetic constraints (==,<=,>==)
    - Set contraints (in)
    - Table constraints
    - Conditional constraints (->)
* Solving algorithms:
    - Branch-and-Prune algorithm (CSPSolver)
    - Interval contractors/propagators (ACID, BC4, HC4, Interval Newton)
    - Search strategies: branching (DFS, IDFS, DMDFS, PDFS, GPDFS), splitting (RR, LF, SSR, SLF)
    - Preprocessing:  basic simplification
    - Postprocessing: prover (interval Newton), box clustering
    - Linear solver interface (supported solvers: Clp, Soplex, Highs)
    - Local solver interface (supported libraries: Nlopt)
* Documentation:
    - Based on mkdocs
    - Basic user-documentation
* Tests:
    - A few tests implemented
* Benchmark problems and C++ examples relating to the documentation

### Changed

- First release
