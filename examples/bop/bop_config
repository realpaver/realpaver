###############################################################################
## This file is part of Realpaver, an interval constraint and NLP solver.    ##
##                                                                           ##
## Copyright (c) 2017-2022 LS2N, Nantes                                      ##
##                                                                           ##
## Realpaver is a software distributed WITHOUT ANY WARRANTY; read the file   ##
## COPYING for information.                                                  ##
###############################################################################

# The name of a parameter respects the pattern [A-Z](A-Z0-9_)*

###############################################################################
## GENERAL PARAMETERS                                                        ##
###############################################################################

# Time limit in seconds
TIME_LIMIT = 100.0

# Tolerance on the width of an interval domain of a constrained variable
# ABS_XTOL: absolute tolerance
# REL_XTOL: relative tolerance
REL_XTOL = 1.0e-8

# Tolerance on the distance between consecutive intervals in iterative methods
# ABS_DTOL: absolute tolerance
# REL_DTOL: relative tolerance
REL_DTOL = 1.0e-6

# Tolerance on the width of the enclosure of a global optimum
# ABS_OBJ_TOL: absolute tolerance
# REL_OBJ_TOL: relative tolerance
REL_OBJ_TOL = 1.0e-4

# Number of digits used to print floating-point numbers and intervals
FLOAT_PRECISION = 12

# Log level
# NONE:  no log
# MAIN:  main level e.g. display results of first-class algorithms
# INTER: intermediary level e.g. display nodes in a search algorithm
# LOW:   low level e.g. display quantities in iterative methods
# FULL:  verbose mode
LOG_LEVEL = LOW

###############################################################################
## BRANCH-AND-CONTRACT ALGORITHMS                                            ##
###############################################################################

# Limit on the number of nodes generated by search algorithms
NODE_LIMIT = 100000

# In a branch-and-bound algorithm, the next node can be either the node with
# the lowest lower bound or the node with the lowest upper bound (diving).
# The frequency manages the selection of the next node:
# - 1 means that the node with the lowest lower bound is always selected;
# - a value > 1 means that the node with the lowest upper bound is selected
#   when the node counter modulo the frequency is equal to 0.
BB_SPACE_FREQUENCY = 2

###############################################################################
## SPLITTING STRATEGIES                                                      ##
###############################################################################

# The objective function is represented by a variable and its domain can be
# split or not.
# - YES: it is considered as any other variable;
# - NO:  its domain is not split.
SPLIT_OBJECTIVE = NO

# Variable selection strategy that chooses the next variable to split
# - MAX_DOM:     largest domain
# - MAX_SMEAR:   maximum smear
# - ROUND_ROBIN: round-robin strategy
SPLIT_SELECTOR = ROUND_ROBIN

# Domain splitting strategy
# - BISECTION: divides a domain in two equal parts
# - PEELING:   divides a domain in three parts
#              the width of peels is fixed using SPLIT_PEEL_FACTOR
# - PARTITION: divides a domain in N slices of equal size
#              N is fixed using SPLIT_NB_SLICES
SPLIT_SLICER = BISECTION

# Peel width factor in [0, 100] used by the Peeling-based slicer
SPLIT_PEEL_FACTOR = 10.0

# Number of slices generated by the Partition-based slicer
SPLIT_NB_SLICES = 5

###############################################################################
## CONTRACTORS AND PROPAGATION                                               ##
###############################################################################

# Tolerance on the distance between consecutive intervals in a propagator
# Given the interval domain Xk of a variable x at the beginning of the k-th
# iteration and Xk' the reduced domain, the variable is considered as modified
# if the distance between Xk and Xk' is greater than this tolerance and it
# leads to a propagation step with respect to this variable.
# ABS_PROPAGATION_DTOL: absolute tolerance
# REL_PROPAGATION_DTOL: relative tolerance
REL_PROPAGATION_DTOL = 1.0e-4

# Iteration limit for the main constraint propagation loop
PROPAGATION_ITER_LIMIT = 50

# Peel factor for the BC3 contractor >= 0.0 and <= 100.0
# Given an interval [a, b] and the peel factor f let w = (b - a) * (p / 100)
# be a ratio of the interval width. Then the consistency of the intervals
# [a, a+w] and [b-w, w] is checked in order to stop the search.
BC3_PEEL_FACTOR = 2.0

# Iteration limit for the iterative method of the BC3 contractor used to find
# the outermost zeros of a function in a given interval
BC3_ITER_LIMIT = 30

# Propagation strategy
# - HC4
# - BC4
# - MAX_CID_HC4
PROPAGATION_ALGORITHM = MAX_CID_HC4

###############################################################################
## LOCAL OPTIMiZATION                                                        ##
###############################################################################

# Coefficient of the Armijo rule used to stop a line search optimization
# > 0.0 and < 1.0
LINE_SEARCH_ARMIJO = 0.09375

# Smallest value of the step length of line search algorithm (absolute value)
LINE_SEARCH_STEP_TOL = 1.0e-8

# Iteration limit of line search algorithm
LINE_SEARCH_ITER_LIMIT = 20

# Tolerance on the norm of the gradient in the steepest descent method
GRADIENT_DESCENT_TOL = 1.0e-3

# Time limit in seconds
LOCAL_SOLVER_TIME_LIMIT = 10.0

# Local optimization technique
# - GRADIENT:   gradient descent method
# - EVALUATION: simple test at the midpoint of a region
LOCAL_SOLVER_ALGORITHM = GRADIENT

###############################################################################
## LINEAR PROGRAMMING                                                        ##
###############################################################################

# Time limit in seconds
LP_TIME_LIMIT = 10.0

# Iteration limit
LP_ITER_LIMIT = 50

###############################################################################
## INTERVAL NEWTON                                                           ##
###############################################################################

# Iteration limit
NEWTON_ITER_LIMIT = 20
